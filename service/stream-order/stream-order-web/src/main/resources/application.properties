server.port=8080
#数据库配置
spring.datasource.url=jdbc:mysql://192.168.1.200:3306/test?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT&allowMultiQueries=true&createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#指定连接池中最大的活跃连接数.
spring.datasource.max-active=8
#指定连接池最大的空闲连接数量.
spring.datasource.max-idle=6
#指定连接池等待连接返回的最大等待时间，毫秒单位.
spring.datasource.max-wait=80
#是否自动提交.
spring.datasource.default-auto-commit=true
#指定获取连接时连接校验的sql查询语句.
spring.datasource.validation-query=SELECT 1
#当从连接池借用连接时，是否测试该连接.
spring.datasource.test-on-borrow=true
#创建时，是否测试连接
spring.datasource.test-on-connect=ture
#在连接归还到连接池时是否测试该连接.
spring.datasource.test-on-return=true
#当连接空闲时，是否执行连接测试.
spring.datasource.test-while-idle=true
#指定启动连接池时，初始建立的连接数量
spring.datasource.initial-size=20
#指定当连接超过废弃超时时间时，是否立刻删除该连接.
spring.datasource.remove-abandoned=true
#指定连接应该被废弃的时间.
spring.datasource.remove-abandoned-timeout=120
#使用DBCP connection pool，是否追踪废弃statement或连接，默认为: false
spring.datasource.log-abandoned=true

#redis
#指定sentinel节点，逗号分隔，格式为host:port
spring.redis.cluster.nodes=192.168.1.210:7000,192.168.1.210:7001,192.168.1.211:7000,192.168.1.211:7001,192.168.1.212:7000,192.168.1.212:7001
#指定连接池最大的活跃连接数，-1表示无限，默认为8
spring.redis.pool.max-active=100
#指定连接池最大的空闲连接数，-1表示无限，默认为8
spring.redis.pool.max-idle=5
#指定当连接池耗尽时，新获取连接需要等待的最大时间，以毫秒单位，-1表示无限等待
spring.redis.pool.max-wait=60000
#指定连接池中空闲连接的最小数量，默认为0
spring.redis.pool.min-idle=1
#指定连接超时时间，毫秒单位，默认为0
spring.redis.timeout=5000

#kafka
spring.kafka.bootstrap-servers=server10:9092,server11:9092,server12:9092
#设置一个默认组
spring.kafka.consumer.group-id=test
#key-value序列化反序列化
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.batch-size=65536
spring.kafka.producer.buffer-memory=524288

#指定client连接到的server的地址，多个以逗号分隔.
spring.rabbitmq.addresses=192.168.1.210:5672,192.168.1.211:5672,192.168.1.212:5672
#指定broker的密码.
spring.rabbitmq.username=hxb
#指定broker的密码.
spring.rabbitmq.password=hxb
#是否创建AmqpAdmin bean. 默认为: true)
spring.rabbitmq.dynamic=true

spring.data.mongodb.uri=mongodb://192.168.1.210:21000,192.168.1.211:21000,192.168.1.212:21000/test


spring.session.timeout=6000

mybatis.type-aliases-package=com.stream.order.entity

logging.path=/user/local/log
logging.level.com.stream.springboot.web.streamspringbootweb=DEBUG
logging.level.org.springframework.web=INFO
logging.levelorg.hibernat=ERROR



